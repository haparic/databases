1. How do you find related data held in two separate data tables?
They are found by using the INNER JOIN statement
2. Explain, in your own words, the difference between an INNER JOIN, LEFT OUTER JOIN, and RIGHT OUTER JOIN. Give a real-world example for each.
INNER JOIN: When two tables are combined, the data will return value matching either table.

an example would be a clothing shop that could sell items that are new and used. Each would correspond to a different table buta search function could look up brands regardless of status

LEFT OUTER JOIN: it returns values from the left table and the matched values on the right table. uses the values of left table to overwrite the column values found in the right table.
The clothing shop just had a sale and there were items discounted this could be used to have a query come up that would include items from the sale that have been sold and are stil currently on sale.

RIGHT OUTER JOIN: It's when two tables are combined and the right table is used as the parameter. it is just like the left join but works in the opposite manner
This could be used as an ad of the front p[age of the shop. it would be a clickable link that would then show all of the items on sale regardless of being used or new. it would query for sales.

3. Define primary key and foreign key. Give a real-world example for each.
A primary key is a unique id that is used to identify each row in a database table.
A foreign key is a key of one table used in another table to connect one to another.
4. Define aliasing.
It is a technique used to create short variable names, with a variable in a query
5. Change this query so that you are using aliasing:
SELECT professor.name, compensation.salary,
compensation.vacation_days FROM professor JOIN
compensation ON professor.id =
compensation.professor_id;

SELECT p.name, c.salary, c.vacation_days 
FROM professor AS p
JOIN compensation AS c
ON p.id = c.professor_id;

6. Why would you use a NATURAL JOIN? Give a real-world example.
To retrieve a table list of all the matching columns of the two tables.
you could look up a color of items that were sold, seearching by what is on sale and what ahs already sold.

7. Using this Employee schema and data, write queries to find the following information:
List all employees and all shifts.

SELECT employees.name, scheduled_shifts.shift_id
FROM employees
JOIN scheduled_shifts
ON employees.id = scheduled_shifts.employee_id

8. Using this Adoption schema and data, please write queries to retrieve the following information and include the results:

A. Create a list of all volunteers. If the volunteer is fostering a dog, include each dog as well.

SELECT first_name, dogs.name
FROM volunteers
LEFT OUTER JOIN dogs
ON dogs.id= volunteers.foster_dog_id;

Rubeus	Munchkin
Marjorie	Marmaduke
Sirius	null
Remus	null
Albus	null


B. The cat's name, adopter's name, and adopted date for each cat adopted within the past month to be displayed as part of the "Happy Tail" social media promotion which posts recent successful adoptions.
SELECT cats.name AS cat_name, adopters.first_name, adopters.last_name, cat_adoptions.date
FROM cats
INNER JOIN cat_adoptions
ON cats.id = cat_adoptions.cat_id
INNER JOIN adopters
ON cat_adoptions.adopter_id = adopters.id 
WHERE cat_adoptions.date >=(current_date-30);

cat_name	first_name	last_name	date
Mushi	Arabella	Figg	2019-05-24T00:00:00.000Z
Victoire	Argus	Filch	2019-05-29T00:00:00.000Z

C. Create a list of adopters who have not yet chosen a dog to adopt.
SELECT adopters.first_name,adopters.last_name
FROM adopters
LEFT OUTER JOIN dog_adoptions
ON adopters.id= dog_adoptions.adopter_id
WHERE dog_adoptions.adopter_id is NULL;

first_name	    last_name
Hermione	      Granger
Arabella            Figg

D. Lists of all cats and all dogs who have not been adopted.
SELECT cats.name AS unadopted_animal_names
FROM cats
LEFT OUTER JOIN cat_adoptions
ON cats.id = cat_adoptions.cat_id
WHERE cat_adoptions.cat_id IS NULL
UNION
SELECT dogs.name 
FROM dogs
LEFT OUTER JOIN dog_adoptions
ON dogs.id = dog_adoptions.dog_id
WHERE dog_adoptions.dog_id IS NULL;

unadopted_animal_names
Boujee
Lassie
Marley
Marmaduke
Munchkin
Nala
Seashell

E. The name of the person who adopted Rosco.
SELECT adopters.first_name, adopters.last_name
FROM adopters 
JOIN dog_adoptions
ON adopters.id = dog_adoptions.adopter_id
WHERE dog_adoptions.dog_id = 10007;


first_name	last_name
Argus Filch

9. Using this Library schema and data, write queries applying the following scenarios and include the results:
To determine if the library should buy more copies of a given book, please provide the names and position, in order, of all of the patrons with a hold (request for a book with all copies checked out) on "Advanced Potion-Making".
SELECT patrons.name, books.title
FROM holds
JOIN patrons ON patrons.id = holds.patron_id
JOIN books ON books.isbn = holds.isbn
WHERE books.title = 'Advanced Potion-Making';


name	        title
Cedric Diggory	Advanced Potion-Making
Terry Boot	    Advanced Potion-Making

List all of the library patrons. If they have one or more books checked out, list the books with the patrons.
SELECT patrons.name, books.title
FROM patrons
LEFT JOIN transactions ON patrons.id = transactions.patron_id
LEFT JOIN books ON books.isbn = transactions.isbn
WHERE transactions.checked_out_date IS NOT NULL
ORDER BY patrons.name;


name	title
Cedric Diggory	Fantastic Beasts and Where to Find Them
Cho Chang	Advanced Potion-Making
Hermione Granger	Fantastic Beasts and Where to Find Them
Hermione Granger	Hogwarts: A History
Padma Patil	Fantastic Beasts and Where to Find Them
Terry Boot	Advanced Potion-Making
Terry Boot	Fantastic Beasts and Where to Find Them